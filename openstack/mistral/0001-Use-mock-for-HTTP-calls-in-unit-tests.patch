From 287ba761c233235aec0dc27dd01f914dd390bd28 Mon Sep 17 00:00:00 2001
From: Dirk Mueller <dirk@dmllr.de>
Date: Mon, 18 Dec 2017 22:36:09 +0100
Subject: [PATCH] Use mock for HTTP calls in unit tests

In test environment without network access, test_retry_policy_from_var
failed to run as it was not expecting the DNS lookup error. Mocking
the HTTP calls instead helps getting this pass.

Change-Id: I050aba6a90dc13200e1cded2195bdf5caf43367b
---
 mistral/tests/unit/engine/test_policies.py | 15 +++++++++++++++
 1 file changed, 15 insertions(+)

diff --git a/mistral/tests/unit/engine/test_policies.py b/mistral/tests/unit/engine/test_policies.py
index fddf16ec..af17e7ea 100644
--- a/mistral/tests/unit/engine/test_policies.py
+++ b/mistral/tests/unit/engine/test_policies.py
@@ -722,6 +722,11 @@ class PoliciesTest(base.EngineTestCase):
 
         self.assertNotIn("retry_task_policy", task_ex.runtime_context)
 
+    @mock.patch.object(
+        requests,
+        'request',
+        mock.MagicMock(side_effect=Exception())
+    )
     def test_retry_policy_negative_numbers(self):
         # Negative delay is not accepted.
         self.assertRaises(
@@ -776,6 +781,11 @@ class PoliciesTest(base.EngineTestCase):
             task_ex.runtime_context["retry_task_policy"]["retry_no"]
         )
 
+    @mock.patch.object(
+        requests,
+        'request',
+        mock.MagicMock(side_effect=Exception())
+    )
     def test_retry_policy_from_var_zero_iterations(self):
         wb_service.create_workbook_v2(RETRY_WB_FROM_VAR)
 
@@ -809,6 +819,11 @@ class PoliciesTest(base.EngineTestCase):
 
         self.assertNotIn("retry_task_policy", task_ex.runtime_context)
 
+    @mock.patch.object(
+        requests,
+        'request',
+        mock.MagicMock(side_effect=Exception())
+    )
     def test_retry_policy_from_var_negative_numbers(self):
         wb_service.create_workbook_v2(RETRY_WB_FROM_VAR)
 
-- 
2.15.0

