{% set pypi_name = 'glance' %}
{% set source = fetch_source('https://tarballs.openstack.org/glance/glance-stable-stein.tar.gz') %}
{% set upstream_version = upstream_version() %}
{% set rpm_release = '1' %}
%global with_doc 1
%if 0%{?rhel} || 0%{?fedora}
%global rdo 1
%endif
Name:           {{ py2name() }}
Version:        {{ py2rpmversion() }}
Release:        {{ py2rpmrelease() }}
Epoch:          {{ epoch('glance') }}
Summary:        OpenStack Image Service (Glance)
License:        {{ license('Apache-2.0') }}
URL:            https://launchpad.net/glance
Source0:        {{ source|basename }}
Source1:        openstack-glance.logrotate
Source2:        openstack-glance.conf
Source3:        openstack-glance-api.service
Source6:        openstack-glance.defaultconf
Source7:        openstack-glance.README.config
BuildRequires:  openstack-macros
BuildRequires:  {{ py2pkg('Paste', py_versions=['py3']) }}
BuildRequires:  {{ py2pkg('PasteDeploy', py_versions=['py3']) }}
BuildRequires:  {{ py2pkg('Routes', py_versions=['py3']) }}
BuildRequires:  {{ py2pkg('WSME', py_versions=['py3']) }}
BuildRequires:  {{ py2pkg('WebOb', py_versions=['py3']) }}
BuildRequires:  {{ py2pkg('cursive', py_versions=['py3']) }}
BuildRequires:  {{ py2pkg('ddt', py_versions=['py3']) }}
BuildRequires:  {{ py2pkg('debtcollector', py_versions=['py3']) }}
BuildRequires:  {{ py2pkg('defusedxml', py_versions=['py3']) }}
BuildRequires:  {{ py2pkg('eventlet', py_versions=['py3']) }}
BuildRequires:  {{ py2pkg('futurist', py_versions=['py3']) }}
BuildRequires:  {{ py2pkg('glance_store', py_versions=['py3']) }}
BuildRequires:  {{ py2pkg('httplib2', py_versions=['py3']) }}
BuildRequires:  {{ py2pkg('keystoneclient', py_versions=['py3']) }}
BuildRequires:  {{ py2pkg('keystonemiddleware', py_versions=['py3']) }}
BuildRequires:  {{ py2pkg('oslo.concurrency', py_versions=['py3']) }}
BuildRequires:  {{ py2pkg('oslo.config', py_versions=['py3']) }}
BuildRequires:  {{ py2pkg('oslo.context', py_versions=['py3']) }}
BuildRequires:  {{ py2pkg('oslo.db', py_versions=['py3']) }}
BuildRequires:  {{ py2pkg('oslo.log', py_versions=['py3']) }}
BuildRequires:  {{ py2pkg('oslo.messaging', py_versions=['py3']) }}
BuildRequires:  {{ py2pkg('oslo.middleware', py_versions=['py3']) }}
BuildRequires:  {{ py2pkg('oslo.policy', py_versions=['py3']) }}
BuildRequires:  {{ py2pkg('oslo.upgradecheck', py_versions=['py3']) }}
BuildRequires:  {{ py2pkg('oslo.utils', py_versions=['py3']) }}
BuildRequires:  {{ py2pkg('oslotest', py_versions=['py3']) }}
BuildRequires:  {{ py2pkg('osprofiler', py_versions=['py3']) }}
BuildRequires:  {{ py2pkg('pyOpenSSL', py_versions=['py3']) }}
BuildRequires:  {{ py2pkg('sqlparse', py_versions=['py3']) }}
BuildRequires:  {{ py2pkg('stestr', py_versions=['py3']) }}
BuildRequires:  {{ py2pkg('stevedore', py_versions=['py3']) }}
BuildRequires:  {{ py2pkg('taskflow', py_versions=['py3']) }}
BuildRequires:  {{ py2pkg('xattr', py_versions=['py3']) }}
Requires:       logrotate
Requires:       python3-{{ pypi_name }} = %{epoch}:%{version}-%{release}
BuildArch:      noarch
%if 0%{?suse_version}
BuildRequires:  systemd-rpm-macros
%{?systemd_requires}
%else
BuildRequires:  systemd
Requires(post): systemd
Requires(postun): systemd
Requires(preun): systemd
%endif
%if 0%{?suse_version}
Requires(pre):  pwdutils
%endif
%if 0%{?rdo}
Requires(pre):  shadow-utils
%endif

%description
The Glance project provides a service where users can upload and discover
data assets that are meant to be used with other services. This currently
includes images and metadata definitions.
Glance image services include discovering, registering, and retrieving
virtual machine images. Glance has a RESTful API that allows querying of
VM image metadata as well as retrieval of the actual image.
VM images made available through Glance can be stored in a variety of
locations from simple filesystems to object-storage systems like the
OpenStack Swift project.

%package -n     python3-{{ pypi_name }}
Summary:        OpenStack Image Service (Glance) - Python module
Group:          Applications/System
Requires:       {{ py2pkg('Paste', py_versions=['py3']) }}
Requires:       {{ py2pkg('PasteDeploy', py_versions=['py3']) }}
Requires:       {{ py2pkg('PrettyTable', py_versions=['py3']) }}
Requires:       {{ py2pkg('Routes', py_versions=['py3']) }}
Requires:       {{ py2pkg('SQLAlchemy', py_versions=['py3']) }}
Requires:       {{ py2pkg('WSME', py_versions=['py3']) }}
Requires:       {{ py2pkg('WebOb', py_versions=['py3']) }}
Requires:       {{ py2pkg('alembic', py_versions=['py3']) }}
Requires:       {{ py2pkg('cryptography', py_versions=['py3']) }}
Requires:       {{ py2pkg('cursive', py_versions=['py3']) }}
Requires:       {{ py2pkg('debtcollector', py_versions=['py3']) }}
Requires:       {{ py2pkg('defusedxml', py_versions=['py3']) }}
Requires:       {{ py2pkg('eventlet', py_versions=['py3']) }}
Requires:       {{ py2pkg('futurist', py_versions=['py3']) }}
Requires:       {{ py2pkg('glance_store', py_versions=['py3']) }}
Requires:       {{ py2pkg('httplib2', py_versions=['py3']) }}
Requires:       {{ py2pkg('iso8601', py_versions=['py3']) }}
Requires:       {{ py2pkg('jsonschema', py_versions=['py3']) }}
Requires:       {{ py2pkg('keystoneauth1', py_versions=['py3']) }}
Requires:       {{ py2pkg('python-keystoneclient', py_versions=['py3']) }}
Requires:       {{ py2pkg('keystonemiddleware', py_versions=['py3']) }}
Requires:       {{ py2pkg('monotonic', py_versions=['py3']) }}
Requires:       {{ py2pkg('oslo.concurrency', py_versions=['py3']) }}
Requires:       {{ py2pkg('oslo.config', py_versions=['py3']) }}
Requires:       {{ py2pkg('oslo.context', py_versions=['py3']) }}
Requires:       {{ py2pkg('oslo.db', py_versions=['py3']) }}
Requires:       {{ py2pkg('oslo.i18n', py_versions=['py3']) }}
Requires:       {{ py2pkg('oslo.log', py_versions=['py3']) }}
Requires:       {{ py2pkg('oslo.messaging', py_versions=['py3']) }}
Requires:       {{ py2pkg('oslo.middleware', py_versions=['py3']) }}
Requires:       {{ py2pkg('oslo.policy', py_versions=['py3']) }}
Requires:       {{ py2pkg('oslo.upgradecheck', py_versions=['py3']) }}
Requires:       {{ py2pkg('oslo.utils', py_versions=['py3']) }}
Requires:       {{ py2pkg('osprofiler', py_versions=['py3']) }}
Requires:       {{ py2pkg('pbr', py_versions=['py3']) }}
Requires:       {{ py2pkg('pyOpenSSL', py_versions=['py3']) }}
Requires:       {{ py2pkg('retrying', py_versions=['py3']) }}
Requires:       {{ py2pkg('six', py_versions=['py3']) }}
Requires:       {{ py2pkg('sqlalchemy-migrate', py_versions=['py3']) }}
Requires:       {{ py2pkg('sqlparse', py_versions=['py3']) }}
Requires:       {{ py2pkg('stevedore', py_versions=['py3']) }}
Requires:       {{ py2pkg('taskflow', py_versions=['py3']) }}

%description -n python3-{{ pypi_name }}
The Glance project provides a service where users can upload and discover
data assets that are meant to be used with other services. This currently
includes images and metadata definitions.
Glance image services include discovering, registering, and retrieving
virtual machine images. Glance has a RESTful API that allows querying of
VM image metadata as well as retrieval of the actual image.
VM images made available through Glance can be stored in a variety of
locations from simple filesystems to object-storage systems like the
OpenStack Swift project.

This package contains the Glance Python library.

%package -n python3-{{ pypi_name }}-tests
Summary:        Glance tests
Requires:       openstack-{{ pypi_name }} = %{epoch}:%{version}-%{release}
Provides:       python-glance-tests = %{epoch}:%{version}-%{release}

%description -n python3-{{ pypi_name }}-tests
The Glance project provides a service where users can upload and discover
data assets that are meant to be used with other services. This currently
includes images and metadata definitions.
Glance image services include discovering, registering, and retrieving
virtual machine images. Glance has a RESTful API that allows querying of
VM image metadata as well as retrieval of the actual image.
VM images made available through Glance can be stored in a variety of
locations from simple filesystems to object-storage systems like the
OpenStack Swift project.

This package contains the Glance test files.

%if 0%{?with_doc}
%package doc
Summary:        Documentation for OpenStack Image Service
Group:          Documentation
BuildRequires:  {{ py2pkg('Sphinx') }}
BuildRequires:  {{ py2pkg('WSME') }}
BuildRequires:  {{ py2pkg('cursive') }}
BuildRequires:  {{ py2pkg('glance_store') }}
BuildRequires:  {{ py2pkg('httplib2') }}
BuildRequires:  {{ py2pkg('openstackdocstheme') }}
BuildRequires:  {{ py2pkg('oslo.concurrency') }}
BuildRequires:  {{ py2pkg('oslo.config') }}
BuildRequires:  {{ py2pkg('oslo.context') }}
BuildRequires:  {{ py2pkg('oslo.db') }}
BuildRequires:  {{ py2pkg('oslo.log') }}
BuildRequires:  {{ py2pkg('oslo.messaging') }}
BuildRequires:  {{ py2pkg('oslo.middleware') }}
BuildRequires:  {{ py2pkg('oslo.policy') }}
BuildRequires:  {{ py2pkg('oslo.utils') }}
BuildRequires:  {{ py2pkg('osprofiler') }}
BuildRequires:  {{ py2pkg('sphinxcontrib-apidoc') }}
BuildRequires:  {{ py2pkg('stevedore') }}
BuildRequires:  {{ py2pkg('taskflow') }}
BuildRequires:  {{ py2pkg('xattr') }}

%description doc
The Glance project provides a service where users can upload and discover
data assets that are meant to be used with other services. This currently
includes images and metadata definitions.
Glance image services include discovering, registering, and retrieving
virtual machine images. Glance has a RESTful API that allows querying of
VM image metadata as well as retrieval of the actual image.
VM images made available through Glance can be stored in a variety of
locations from simple filesystems to object-storage systems like the
OpenStack Swift project.

This package contains the documentation.
%endif

%package api
Summary:        OpenStack Image service (Glance) - API
Group:          Development/Languages/Python
Requires:       %{name} = %{epoch}:%{version}-%{release}

%description api
The Glance project provides a service where users can upload and discover
data assets that are meant to be used with other services. This currently
includes images and metadata definitions.
Glance image services include discovering, registering, and retrieving
virtual machine images. Glance has a RESTful API that allows querying of
VM image metadata as well as retrieval of the actual image.
VM images made available through Glance can be stored in a variety of
locations from simple filesystems to object-storage systems like the
OpenStack Swift project.

This package contains the %{name} API server.

%prep
%autosetup -n {{ pypi_name }}-{{ upstream_version }}
%py_req_cleanup

%build
%{py3_build}
# build documentation
%if 0%{?with_doc}
PBR_VERSION={{ upstream_version }} sphinx-build -b html doc/source doc/build/html
rm -rf doc/build/html/.{doctrees,buildinfo}
%endif
# regenerate the sample config files
for service in api scrubber cache manage image-import; do
    PYTHONPATH=. oslo-config-generator --config-file etc/oslo-config-generator/glance-$service.conf
done

%install
%{py3_install}
# directories
install -d -m 755 %{buildroot}%{_sysconfdir}/{{ pypi_name }}
install -d -m 755 %{buildroot}%{_sysconfdir}/glance/glance.conf.d/
install -d -m 755 %{buildroot}%{_sysconfdir}/glance/glance-api.conf.d/
install -d -m 755 %{buildroot}%{_localstatedir}/lib/{{ pypi_name }}
install -d -m 755 %{buildroot}%{_localstatedir}/lib/{{ pypi_name }}/images
install -d -m 750 %{buildroot}%{_localstatedir}/log/{{ pypi_name }}
install -d -m 750 %{buildroot}%{_localstatedir}/cache/{{ pypi_name }}
install -d -m 700 %{buildroot}%{_rundir}/{{ pypi_name }}
# tmpfile generator
install -D -m 644 %{SOURCE2} %{buildroot}/%{_tmpfilesdir}/glance.conf
# install sample configs
cp -pr etc/* %{buildroot}%{_sysconfdir}/{{ pypi_name }}
for service in api scrubber cache manage swift image-import; do
    mv %{buildroot}%{_sysconfdir}/{{ pypi_name }}/glance-$service.conf{.sample,}
done
install -p -D -m 640 %{SOURCE6} %{buildroot}%{_sysconfdir}/{{ pypi_name }}/README.config
rm -rf %{buildroot}%{_sysconfdir}/{{ pypi_name }}/oslo-config-generator
# default config
install -D -m 640 %{SOURCE6} %{buildroot}/%{_sysconfdir}/glance/glance.conf.d/010-glance.conf
# systemd
install -p -D -m 444 %{SOURCE3} %{buildroot}%{_unitdir}/openstack-glance-api.service
# logrotate
install -p -D -m 644 %{SOURCE1} %{buildroot}%{_sysconfdir}/logrotate.d/openstack-glance
# move metadefs
mv %{buildroot}%{_prefix}%{_sysconfdir}/glance/metadefs/* %{buildroot}%{_sysconfdir}/glance/metadefs
# Remove duplicate files under /usr/etc
rm -rf %{buildroot}%{_prefix}%{_sysconfdir}/glance
# remove non-packaged files
rm -rf %{buildroot}%{_sysconfdir}/{{ pypi_name }}/glance-registry-paste.ini
rm -rf %{buildroot}%{_sysconfdir}/{{ pypi_name }}/glance-registry.conf
rm -rf %{buildroot}%{_bindir}/glance-registry



%pre
%openstack_pre_user_group_create glance glance /sbin/nologin
exit 0

%check
%if 0%{?suse_version}
PYTHON=python3 OS_TEST_PATH=./glance/tests/unit PYTHONPATH=. stestr run
%endif
%if 0%{?rdo}
OS_TEST_PATH=./glance/tests/unit PYTHONPATH=. stestr-3 run
%endif

%post
%tmpfiles_create %{_tmpfilesdir}/glance.conf

%post api
%systemd_post %{name}-api.service

%preun api
%systemd_preun %{name}-api.service

%postun api
%systemd_postun_with_restart %{name}-api.service

%files
%license LICENSE
%_tmpfilesdir/glance.conf
%dir %attr(0750, root, glance) %{_sysconfdir}/{{ pypi_name }}
%dir %attr(0750, root, glance) %{_sysconfdir}/glance/glance.conf.d/
%dir %attr(0750, root, glance) %{_sysconfdir}/glance/glance-api.conf.d/
%config(noreplace) %attr(0640, root, glance) %{_sysconfdir}/glance/glance.conf.d/010-glance.conf
%{_sysconfdir}/{{ pypi_name }}/README.config
%config(noreplace) %attr(0640, root, glance) %{_sysconfdir}/{{ pypi_name }}/glance-api.conf
%config(noreplace) %attr(0640, root, glance) %{_sysconfdir}/{{ pypi_name }}/glance-cache.conf
%config(noreplace) %attr(0640, root, glance) %{_sysconfdir}/{{ pypi_name }}/glance-image-import.conf
%config(noreplace) %attr(0640, root, glance) %{_sysconfdir}/{{ pypi_name }}/glance-scrubber.conf
%config(noreplace) %attr(0640, root, glance) %{_sysconfdir}/{{ pypi_name }}/glance-swift.conf
%config(noreplace) %attr(0640, root, glance) %{_sysconfdir}/{{ pypi_name }}/glance-manage.conf
%config %{_sysconfdir}/{{ pypi_name }}/glance-api-paste.ini
%config %{_sysconfdir}/{{ pypi_name }}/policy.json
%config %{_sysconfdir}/{{ pypi_name }}/property-protections-policies.conf.sample
%config %{_sysconfdir}/{{ pypi_name }}/property-protections-roles.conf.sample
%config %{_sysconfdir}/{{ pypi_name }}/ovf-metadata.json.sample
%config %{_sysconfdir}/{{ pypi_name }}/schema-image.json
%dir %config %{_sysconfdir}/{{ pypi_name }}/metadefs
%{_sysconfdir}/{{ pypi_name }}/metadefs/README
%config %{_sysconfdir}/{{ pypi_name }}/metadefs/*.json
%config(noreplace) %{_sysconfdir}/logrotate.d/%{name}
%dir %attr(0755, glance, glance) %{_localstatedir}/lib/{{ pypi_name }}
%dir %attr(0755, glance, glance) %{_localstatedir}/lib/{{ pypi_name }}/images
%dir %attr(0750, glance, glance) %{_localstatedir}/log/{{ pypi_name }}
%dir %attr(0750, glance, glance) %{_localstatedir}/cache/{{ pypi_name }}
%{_bindir}/glance-cache-cleaner
%{_bindir}/glance-cache-manage
%{_bindir}/glance-cache-prefetcher
%{_bindir}/glance-cache-pruner
%{_bindir}/glance-control
%{_bindir}/glance-manage
%{_bindir}/glance-replicator
%{_bindir}/glance-scrubber
%{_bindir}/glance-status

%files -n python3-glance
%defattr(-,root,root,-)
%license LICENSE
%{python3_sitelib}/{{ pypi_name }}*
%exclude %{python3_sitelib}/glance/tests

%files -n python3-{{ pypi_name }}-tests
%license LICENSE
%{python3_sitelib}/{{ pypi_name }}/tests

%if 0%{?with_doc}
%files doc
%license LICENSE
%doc doc/build/html
%endif

%files api
%defattr(-,root,root,-)
%{_unitdir}/openstack-glance-api.service
%{_bindir}/{{ pypi_name }}-api
%{_bindir}/{{ pypi_name }}-wsgi-api

%changelog
