{% set pypi_name = 'yaql' %}
{% set upstream_version = upstream_version('1.1.3') %}
{% set rpm_release = '1' %}
{% set source = url_pypi() %}
%global oldpython python
Name:           {{ py2name() }}
Version:        {{ py2rpmversion() }}
Release:        {{ py2rpmrelease() }}
Summary:        YAQL - Yet Another Query Language
License:        {{ license('Apache-2.0') }}
Group:          Development/Languages/Python
URL:            https://launchpad.net/{{ pypi_name }}
Source0:        {{ source }}
BuildRequires:  openstack-macros
# for testing
BuildRequires:  {{ py2pkg('Sphinx', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('fixtures', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('oslosphinx', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('pbr', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('ply', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('python-dateutil', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('python-subunit', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('six', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('testrepository', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('testscenarios', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('testtools', py_versions=['py2', 'py3']) }}
Requires:       {{ py2pkg('Babel') }}
Requires:       {{ py2pkg('ply') }}
Requires:       {{ py2pkg('python-dateutil') }}
Requires:       {{ py2pkg('six') }}
Conflicts:      %{oldpython}-yaql < %version-%release
BuildArch:      noarch
%if 0%{?suse_version}
Requires(post): update-alternatives
Requires(postun): update-alternatives
%else
# on RDO, update-alternatives is in chkconfig
Requires(post): chkconfig
Requires(postun): chkconfig
%endif
%python_subpackages

%description
YAQL (Yet Another Query Language) is an embeddable and extensible query
language, that allows performing complex queries against arbitrary objects. It
has a vast and comprehensive standard library of frequently used querying
functions and can be extend even further with user-specified functions. YAQL is
written in python and is distributed via PyPI.

%prep
%autosetup -p1 -n {{ pypi_name }}-{{ upstream_version }}
%py_req_cleanup

%build
%{python_build}

%install
%{python_install}
%python_clone -a %{buildroot}%{_bindir}/yaql

%post
%{python_install_alternative yaql}

%postun
%python_uninstall_alternative yaql

%check
%{python_expand rm -rf .testrepository
$python setup.py testr
}

%files %{python_files}
%license LICENSE
%doc ChangeLog README.rst
%python_alternative %{_bindir}/yaql
%{python_sitelib}/{{ pypi_name }}
%{python_sitelib}/{{ pypi_name }}*.egg-info

%changelog
