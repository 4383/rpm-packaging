{% set pypi_name = 'python-vitrageclient' %}
{% set upstream_version = upstream_version('3.0.0') %}
{% set rpm_release = '1' %}
{% set source = url_pypi() %}

# NOTE: RDO does not have the required version of networkx for python2
%if ! 0%{?suse_version}
%define skip_python2 1
%endif
Name:           {{ py2name() }}
Version:        {{ py2rpmversion() }}
Release:        {{ py2rpmrelease() }}
Summary:        Python API and CLI for OpenStack Vitrage
License:        {{ license('Apache-2.0') }}
Group:          Development/Languages/Python
URL:            https://launchpad.net/%{name}
Source0:        https://pypi.io/packages/source/p/%{name}/%{name}-%{version}.tar.gz
BuildRequires:  openstack-macros
BuildRequires:  {{ py2pkg('cliff', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('keystoneauth1', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('oslotest', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('pbr', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('pydot', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('python-subunit', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('setuptools', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('testrepository', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('testscenarios', py_versions=['py2', 'py3']) }}
BuildRequires:  {{ py2pkg('testtools', py_versions=['py2', 'py3']) }}
Requires:       {{ py2pkg('Babel') }}
Requires:       {{ py2pkg('PrettyTable') }}
Requires:       {{ py2pkg('cliff') }}
Requires:       {{ py2pkg('iso8601') }}
Requires:       {{ py2pkg('keystoneauth1') }}
Requires:       {{ py2pkg('networkx') }}
Requires:       {{ py2pkg('osc-lib') }}
Requires:       {{ py2pkg('oslo.utils') }}
Requires:       {{ py2pkg('pbr') }}
Requires:       {{ py2pkg('pydot') }}
BuildArch:      noarch
%if 0%{?suse_version}
BuildRequires:  {{ py2pkg('networkx', py_versions=['py2', 'py3']) }}
Requires(post): update-alternatives
Requires(postun): update-alternatives
%else
BuildRequires:  {{ py2pkg('networkx', py_versions=['py3']) }}
# on RDO, update-alternatives is in chkconfig
Requires(post): chkconfig
Requires(postun): chkconfig
%endif
%python_subpackages

%description
Client library for Vitrage built on the Vitrage API. It provides a Python API
(the vitrageclient module) and a command-line tool (vitrage).

%package -n {{ py2name() }}-doc
Summary:        Documentation for OpenStack Vitrage API client libary
Group:          Documentation
BuildRequires:  {{ py3('Sphinx') }}
BuildRequires:  {{ py3('openstackdocstheme') }}

%description -n {{ py2name() }}-doc
Client library for Vitrage built on the Vitrage API. It provides a Python API
(the vitrageclient module) and a command-line tool (vitrage).
This package contains the documentation.

%prep
%autosetup -p1 -n %{name}-%{version}
%py_req_cleanup

%build
%{python_build}

# Build HTML docs and man page
PBR_VERSION=%{version} %sphinx_build -b html doc/source doc/build/html
rm -rf doc/build/html/.{doctrees,buildinfo}

%install
%{python_install}
# bash completion
install -p -D -m 644 tools/vitrage.bash_completion %{buildroot}%{_sysconfdir}/bash_completion.d/vitrage.bash_completion
rm %{buildroot}%{_datadir}/vitrage.bash_completion
%python_clone -a %{buildroot}%{_sysconfdir}/bash_completion.d/vitrage.bash_completion
%python_clone -a %{buildroot}%{_bindir}/vitrage

%post
%python_install_alternative vitrage

%postun
%python_uninstall_alternative vitrage


%check
%{python_expand rm -rf .testrepository
export OS_TEST_PATH=vitrageclient/tests/unit
export PYTHON=$python
$python setup.py testr
}

%files %{python_files}
%doc README.rst
%license LICENSE
%{python_sitelib}/vitrageclient
%{python_sitelib}/*.egg-info
%python_alternative %{_sysconfdir}/bash_completion.d/vitrage.bash_completion
%python_alternative %{_bindir}/vitrage

%files -n {{ py2name() }}-doc
%doc doc/build/html
%license LICENSE

%changelog
